name: CI for Preview
on:
  pull_request:
    branches: main

env:
  NODE_VERSION: 22.*
  YARN_VERSION: 4.6.0
  LAUNCH_CSPELL: on # Launch CSpell. [ on, off ]
  LAUNCH_ESLINT: on # Launch ESLint. [ on, off ]
  LAUNCH_STYLELINT: on # Launch Stylelint. [ on, off ]
  LAUNCH_TYPECHECK: on # Launch tsc. [ on, off ]
  LAUNCH_JEST: on # Launch Jest. [ on, off ]
  LAUNCH_BUILD: on # Launch Build. [ on, off ]

jobs:
  setup:
    name: Setup Module
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache Node Modules
        id: node_modules_cache_id
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Install Dependencies
        run: yarn

  cspell:
    name: CSpell for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Do CSpell
        if: env.LAUNCH_CSPELL == 'on'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          yarn cspell --dot --no-must-find-files "**/*" \
          | reviewdog -level=warning -efm="%f:%l:%c - %m" -reporter=github-pr-review
      - name: Displayed CSpell Failure on Checks
        if: env.LAUNCH_CSPELL == 'on'
        run: yarn cspell --dot --no-must-find-files "**/*"

  eslintApps:
    name: ESlint Apps for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Do ESLint Apps
        if: env.LAUNCH_ESLINT == 'on'
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          workdir: "apps"
          eslint_flags: "./**/*.{ts,mjs,js}"
      - name: Displayed ESLINT Failure on Checks
        if: env.LAUNCH_ESLINT == 'on'
        run: yarn lint:apps

  eslintClient:
    name: ESlint Client for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Do ESLint Client
        if: env.LAUNCH_ESLINT == 'on'
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          workdir: "client"
          eslint_flags: "./**/*.{ts,mjs,js}"
      - name: Displayed ESLINT Failure on Checks
        if: env.LAUNCH_ESLINT == 'on'
        run: yarn lint:client

  stylelint:
    name: Stylelint for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Do Stylelint
        if: env.LAUNCH_STYLELINT == 'on'
        uses: reviewdog/action-stylelint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          stylelint_input: "./**/*.scss"
      - name: Displayed Stylelint Failure on Checks
        if: env.LAUNCH_STYLELINT == 'on'
        run: yarn stylelint

  typecheckApps:
    name: Type Check Apps for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Prisma Generate
        if: env.LAUNCH_TYPECHECK == 'on'
        run: yarn prisma:generate
      # Currently, tsc && reviewdog is will not display properly in conversation review.
      - name: Do Type Check Apps
        if: env.LAUNCH_TYPECHECK == 'on'
        uses: EPMatt/reviewdog-action-tsc@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          workdir: apps
          level: warning
          fail_on_error: true
          filter_mode: nofilter
      # - name: Displayed Tsc Failure on Checks
      #   if: env.LAUNCH_TYPECHECK == 'on'
      #   run: yarn typecheck:apps

  typecheckClient:
    name: Type Check Client for Preview
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      # Currently, tsc && reviewdog is will not display properly in conversation review.
      - name: Do Type Check Client
        if: env.LAUNCH_TYPECHECK == 'on'
        uses: EPMatt/reviewdog-action-tsc@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-review
          workdir: client
          level: warning
          fail_on_error: true
          filter_mode: nofilter
      # - name: Displayed Tsc Failure on Checks
      #   if: env.LAUNCH_TYPECHECK == 'on'
      #   run: yarn typecheck:client

  jestApps:
    name: Jest Apps
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Set Env
        run: |
          if ls apps/resource/tests/**/*.test.ts > /dev/null 2>&1 || ls apps/resource/tests/**/*.test.js > /dev/null 2>&1
          then
              echo "FILE_EXISTS=on" >> $GITHUB_ENV
          else
              echo "FILE_EXISTS=off" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Do Jest Apps
        if: env.LAUNCH_JEST == 'on' && env.FILE_EXISTS == 'on'
        run: yarn jest:apps

  jestClient:
    name: Jest Client
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Set Env
        run: |
          if ls client/resource/tests/**/*.test.ts > /dev/null 2>&1 || ls client/resource/tests/**/*.test.js > /dev/null 2>&1
          then
              echo "FILE_EXISTS=on" >> $GITHUB_ENV
          else
              echo "FILE_EXISTS=off" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Do Jest Client
        if: env.LAUNCH_JEST == 'on' && env.FILE_EXISTS == 'on'
        run: yarn jest:client

  build:
    name: Build Test for Preview
    needs:
      - setup
      - cspell
      - eslintApps
      - eslintClient
      - stylelint
      - typecheckApps
      - typecheckClient
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Execution Environment for Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Set Yarn Version
        run: |
          corepack enable
          yarn set version ${{ env.YARN_VERSION }}
      - name: Restore Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-v${{ env.NODE_VERSION }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
      - name: Install Global Gulp For Client.
        if: env.LAUNCH_BUILD == 'on'
        run: yarn workspace client add global gulp-cli
      - name: Prisma Generate
        if: env.LAUNCH_BUILD == 'on'
        run: yarn prisma:generate
      - name: Do Build Test
        if: env.LAUNCH_BUILD == 'on'
        run: yarn build
